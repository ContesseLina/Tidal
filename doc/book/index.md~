% TidalCycles

# Introduction: What is TidalCycles?

TidalCycles (henceforth called *Tidal* for short) is a strange piece
of software. It's embedded in a programming language (called Haskell),
but many people using it would not describe themselves as
programmers. It's generally thought of as a system for making music,
but many people use it for other things -- making visuals, or
controlling lights, or making fixed images.

What Tidal is really all about is *pattern*. The reason why it looks
like a programming language is that code is all about pattern
too.. But Tidal code probably has more in common with a knitting
pattern than the sourcecode of an e-commerce system. Pattern is
everywhere, in textiles, language, mathematics and of course
music. But what do we mean by pattern?

Pattern can be thought about in four different aspects of behaviour:

* Repetition: Essential to rhythm and meter, repetition forms the
  backbone of a great deal of music, particularly dance musics.

* Symmetry: For example rotational symmetry, as well as reflective mirroring, and
  relatedly self-similarity at multiple scales.

* Interference: Where two or more patterns can be combined, creating
  often astonishing 'higher-order' patterns out of simple parts.  For
  example the moire patterns seen when netting overlaps, or where the
  structure of a textile weave interferes with colour patternings of
  warp and weft threads.

* Deviation: Where we use the above to set up expectation and sweet
  anticipation, we all too often purposefully break those
  expectations, playing with people's minds. In computing, we call
  this 'random numbers' but it's really about choosing not to make
  decisions, or adding glitches and imperfections.

It's possible to use Tidal to notate music you already have in
mind. However, by exploring and combining such patternings together
you can find music that is beyond your imagination. This is really
what Tidal is made for - exploration and improvisation.

First of all though we need to cover some basics. Before we get on to
patternings, we need to work out how to play sounds, and how to modify
them through sonic filters and effects. Lets do that now.

# Sounds

# Sequences

# Patternings

## Repetition

## Symmetry

## Interference

## Deviation

# Syntax

# MIDI

# Tidal for Improvisation

# Tidal for Composition

